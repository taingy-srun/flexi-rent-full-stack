version: '3.8'

services:
  # PostgreSQL databases
  user-db:
    image: postgres:15
    container_name: user-service-db
    environment:
      POSTGRES_DB: user_service_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    ports:
      - "5433:5432"
    volumes:
      - user_db_data:/var/lib/postgresql/data
    networks:
      - room-rental-network

  property-db:
    image: postgres:15
    container_name: property-service-db
    environment:
      POSTGRES_DB: property_service_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    ports:
      - "5434:5432"
    volumes:
      - property_db_data:/var/lib/postgresql/data
    networks:
      - room-rental-network

  booking-db:
    image: postgres:15
    container_name: booking-service-db
    environment:
      POSTGRES_DB: booking_service_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    ports:
      - "5435:5432"
    volumes:
      - booking_db_data:/var/lib/postgresql/data
    networks:
      - room-rental-network

  # Microservices
  user-service:
    build:
      context: ./backend/user-service
      dockerfile: Dockerfile
    container_name: user-service
    ports:
      - "8081:8081"
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://user-db:5432/user_service_db
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: password
      JWT_SECRET: ${JWT_SECRET}
      JWT_EXPIRATION_MS: ${JWT_EXPIRATION_MS}
    depends_on:
      - user-db
    networks:
      - room-rental-network
    restart: unless-stopped

  property-service:
    build:
      context: ./backend/property-service
      dockerfile: Dockerfile
    container_name: property-service
    ports:
      - "8082:8082"
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://property-db:5432/property_service_db
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: password
    depends_on:
      - property-db
    networks:
      - room-rental-network
    restart: unless-stopped

  booking-service:
    build:
      context: ./backend/booking-service
      dockerfile: Dockerfile
    container_name: booking-service
    ports:
      - "8083:8083"
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://booking-db:5432/booking_service_db
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: password
    depends_on:
      - booking-db
    networks:
      - room-rental-network
    restart: unless-stopped

  api-gateway:
    build:
      context: ./backend/api-gateway
      dockerfile: Dockerfile
    container_name: api-gateway
    ports:
      - "8080:8080"
    environment:
      USER_SERVICE_URL: http://user-service:8081
      PROPERTY_SERVICE_URL: http://property-service:8082
      BOOKING_SERVICE_URL: http://booking-service:8083
    depends_on:
      - user-service
      - property-service
      - booking-service
    networks:
      - room-rental-network
    restart: unless-stopped

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: frontend
    ports:
      - "3000:3000"
    environment:
      REACT_APP_API_URL: http://localhost:8080
    depends_on:
      - api-gateway
    networks:
      - room-rental-network
    restart: unless-stopped

volumes:
  user_db_data:
  property_db_data:
  booking_db_data:

networks:
  room-rental-network:
    driver: bridge